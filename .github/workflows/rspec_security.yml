name: Rails RSpec and security
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # ヘルスチェック項目
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      selenium:
        image: selenium/standalone-chrome
        ports:
          - "4444:4444"

    steps:
      # ref:https://github.com/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

        # ref:https://github.com/actions/setup-ruby
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      # ref:https://github.com/actions/cache/blob/main/examples.md#ruby---bundler
      - name: Ruby Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

        # yarnキャッシュのディレクトリ指定
        # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

        # yarnのインストール
      - name: yarn install
        run: yarn install

        # yarnのキャッシュ
        # ref:https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # DBのセット
      # db:schemaを使用
      - name: Setup test database
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create db:schema:load --trace

      # rspecによるテスト
      # upload-artifactを使用してfailure時にデータを保存
      - name: run rspec
        run: bundle exec rspec
      - name: Archive rspec result screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: rspec result screenshots
          path: tmp/screenshots/

      # gemの脆弱性とセキュリティのチェック
      # ref:https://github.com/rubysec/bundler-audit#readme
      # brakeman -q:To suppress informational warnings and just output the report:
      # セキュリティレベルw2 ref:https://github.com/presidentbeef/brakeman#confidence-levels
      - name: security check
        run: |
          bundle exec bundle-audit check --update
          bundle exec brakeman -q -w2
